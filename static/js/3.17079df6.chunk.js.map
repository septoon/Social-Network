{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/images/user.jpg","hoc/withAuthRedirect.js","components/Profile/Profile.module.css","components/Profile/Avatar/Avatar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Avatar/Avatar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsÐ¡ontainer.jsx","components/Profile/ProfileInfo/ProfileStatusWH.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","AddPhoto","type","className","classes","input__file","onChange","e","target","files","savePhoto","for","input__file_button","input__file_button_text","Avatar","profile","avatarBlock","avatar","src","photos","large","user","alt","input__wrapper","isOwner","Preloader","Post","item","name","fullName","content","message","likes","maxLength300","maxLengthCreator","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","posts","Field","autoFocus","placeholder","validate","required","component","Input","MyPosts","memo","postsElements","postsData","reverse","map","arg","post","likesCount","id","postsBlock","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWH","useState","editMode","setEditMode","status","setStatus","useEffect","event","currentTarget","onBlur","updateStatusProfile","onDoubleClick","ProfileData","goToEditMode","contacts","keys","onClick","key","ProfileDataForm","ProfileInfo","wrapper","descriptionBlock","lookingForAJob","aboutMe","lookingForAJobDescription","Profile","profile_wrapper","top","bottom","friends_wrapper","Friends","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatusProfile","refreshProfile","prevProps","prevState","snapshot","PureComponent","compose","withRouter"],"mappings":"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","file":"static/js/3.17079df6.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/user.d59f6bd9.jpg\";","import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = state =>  ({ isAuth: state.auth.isAuth })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_wrapper\":\"Profile_profile_wrapper__22JUB\",\"top\":\"Profile_top__2Lqfm\",\"bottom\":\"Profile_bottom__UTUre\",\"friends_wrapper\":\"Profile_friends_wrapper__xT19W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarBlock\":\"Avatar_avatarBlock__2xv7T\",\"avatar\":\"Avatar_avatar__3oYSD\",\"input__wrapper\":\"Avatar_input__wrapper__3tgY5\",\"input__file\":\"Avatar_input__file__2KIs1\",\"input__file_button_text\":\"Avatar_input__file_button_text__3zKE5\",\"input__file_button\":\"Avatar_input__file_button__1hAW2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__3Z2Ue\",\"postsBlock\":\"MyPosts_postsBlock__1E-cR\",\"posts\":\"MyPosts_posts__1AUiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__1A0Cd\",\"item\":\"Post_item__17UWz\",\"avatar\":\"Post_avatar__15WEr\",\"name\":\"Post_name__1mAEr\",\"likes\":\"Post_likes__1s1n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__3w4GF\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2aiE6\",\"avatar\":\"ProfileInfo_avatar__pQpEA\",\"status\":\"ProfileInfo_status__1F6k-\",\"contacts\":\"ProfileInfo_contacts__2wPL1\"};","import React from 'react'\r\nimport classes from './Avatar.module.css'\r\nimport user from '../../../assets/images/user.jpg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\n\r\nconst AddPhoto = (props) => {\r\n\r\n    const onAvatarSelected = (e) => {\r\n        if(e.target.files.length) props.savePhoto(e.target.files[0])\r\n    }\r\n    return (\r\n        <div>\r\n            <input type='file' className={classes.input__file} onChange={ onAvatarSelected } /> \r\n            <label for=\"input__file\" className={classes.input__file_button}>\r\n                <span className={classes.input__file_button_text}>Ð¡Ð¼ÐµÐ½Ð¸ÑÑ ÑÐ¾ÑÐ¾</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Avatar = (props) => {\r\n    if(!props.profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n    // debugger\r\n    return(\r\n        <div className={classes.avatarBlock}>\r\n            <img className={classes.avatar} src={props.profile.photos.large || user} alt='avatar' />\r\n            <div className={classes.input__wrapper}>\r\n                { props.isOwner && <AddPhoto /> }\r\n            </div>\r\n            <NavLink to='/dialogs' > <button className={classes.input__file_button} >ÐÐ°Ð¿Ð¸ÑÐ°ÑÑ ÑÐ¾Ð¾Ð±ÑÐµÐ½Ð¸Ðµ</button> </NavLink>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avatar","import React from 'react'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    if(!props.profile) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n    return (\r\n        <div className={classes.item}>\r\n            <div className={classes.avatar}>\r\n            <img src='https://cdn.jpegmini.com/user/images/slider_puffin_before_mobile.jpg' alt='avatar' />\r\n            </div>\r\n            <div className={classes.name}>\r\n                <strong>{props.profile.fullName}</strong>\r\n            </div>\r\n            <div className={classes.content}>\r\n                {props.message}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                <span>Likes: {props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Post from './Post/Post';\r\nimport { maxLengthCreator, required } from '../../common/Validator/Validator';\r\nimport Input from '../../common/FormsControls/FormControls';\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst PostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} > \r\n            <div className={classes.posts}>\r\n                <Field autoFocus placeholder={'New post...'}\r\n                        validate={[required, maxLength300]}\r\n                        name={'newPostText'}\r\n                        component={Input} />\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostReduxForm = reduxForm({ form: 'post' }) (PostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = \r\n    [...props.postsData] // Ð´ÐµÐ»Ð°ÐµÐ¼ ÐºÐ¾Ð¿Ð¸Ñ Ð¼Ð°ÑÑÐ¸Ð²Ð° Ð¿Ð¾ÑÑÐ¾Ð², ÑÑÐ¾Ð±Ñ Ð¿ÐµÑÐµÐ²ÐµÑÐ½ÑÑÑ\r\n    .reverse()\r\n    .map(arg => <Post profile={props.profile} key={arg.id} message={arg.post} likes={arg.likesCount} name={arg.name} />)\r\n\r\n    const onAddPost = value => props.addPost(value.newPostText)\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            Posts\r\n            { props.isOwner && <PostReduxForm onSubmit={onAddPost} /> }            \r\n            {postsElements}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts\r\n","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        profile: state.profilePage.profile,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = dispatch => {\r\n    return {\r\n        addPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWH = (props) => {\r\n    let [editMode,setEditMode] = useState(false)\r\n    let [status,setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatusProfile(status)\r\n    }\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                !editMode ? <div><span onDoubleClick={ activateEditMode } >{props.status}</span></div>\r\n                : <div> <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode } value={status} /> </div>\r\n            }\r\n            {/* {\r\n            !editMode && <div><span onDoubleClick={ activateEditMode } >{props.status}</span></div>\r\n\r\n            }                \r\n            {\r\n            editMode && <div> <input autoFocus={true} inBlur={ deactivateEditMode } /> </div>\r\n            } */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWH\r\n","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport classes from './ProfileInfo.module.css'\r\nimport ProfileStatusWH from './ProfileStatusWH'\r\n\r\nconst ProfileInfo = ({ profile, isOwner, updateStatusProfile, status }) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    \r\n    if(!profile) return <Preloader />\r\n\r\n    return(\r\n        <div className={classes.wrapper} >\r\n            <div className={classes.descriptionBlock}>\r\n                <div>\r\n                    <h1>{profile.fullName}</h1>\r\n                    <div className={classes.status} ><b>Ð¡ÑÐ°ÑÑ: </b> <ProfileStatusWH updateStatusProfile={updateStatusProfile} status={status}/></div>\r\n                    <div>\r\n                        <p>\r\n                        ÐÑÑ ÑÐ°Ð±Ð¾ÑÑ: {profile.lookingForAJob ? 'ÐÐ°' : 'ÐÐµÑ'}\r\n                        </p>\r\n                        <p>\r\n                        ÐÐ±Ð¾ Ð¼Ð½Ðµ: {profile.aboutMe}\r\n                        </p>\r\n                        {profile.lookingForAJob &&\r\n                        <p>\r\n                            ÐÐ¾Ð¸ Ð½Ð°Ð²ÑÐºÐ¸: {profile.lookingForAJobDescription}\r\n                        </p>}\r\n                        <div>\r\n                            <b>ÐÐ¾Ð½ÑÐ°ÐºÑÑ: </b> \r\n                            {\r\n                                editMode \r\n                                ? <ProfileDataForm profile={profile} isOwner={isOwner} goToEditMode={ () => { setEditMode(false) } } /> \r\n                                : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={ () => { setEditMode(true) } } /> \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode}) => {\r\n    const contacts = Object.keys(profile.contacts)\r\n    return (\r\n        <div className={classes.contacts} >\r\n            {isOwner && <button onClick={goToEditMode} >ÐÐ·Ð¼ÐµÐ½Ð¸ÑÑ</button>}\r\n            {contacts.map(key => <div > <span>{key}:</span> {profile.contacts[key]} </div> )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDataForm = ({ profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {isOwner && <button onClick={goToEditMode} >Ð¡Ð¾ÑÑÐ°Ð½Ð¸ÑÑ</button>}\r\n            form    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import classes from './Profile.module.css';\r\nimport React from 'react';\r\nimport Avatar from './Avatar/Avatar';\r\nimport Friends from '../Friends/Friends';\r\nimport MyPostsContainer from './MyPosts/MyPostsÐ¡ontainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = props => {\r\n    return (\r\n        <div className={classes.profile_wrapper}>\r\n            <div className={classes.top} >\r\n                <Avatar profile={props.profile} savePhoto={props.savePhoto} isOwner={props.isOwner} />\r\n                <ProfileInfo profile={props.profile}\r\n                status={props.status} updateStatusProfile={props.updateStatusProfile}\r\n                isOwner={props.isOwner}  />\r\n            </div>\r\n            <div className={classes.bottom} >\r\n                <div className={classes.friends_wrapper} >\r\n                    <Friends />\r\n                </div>\r\n                <MyPostsContainer profile={props.profile} isOwner={props.isOwner} />            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { PureComponent } from 'react';\r\nimport Profile from './Profile';\r\nimport {getUserProfile, getStatusProfile, updateStatusProfile, savePhoto} from '../../redux/profile-reducer'\r\nimport {connect} from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends PureComponent {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId || this.props.authorizedUserId\r\n        // if (!userId) this.props.history.push('/login')\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatusProfile(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) this.refreshProfile()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile} status={this.props.status}\r\n            updateStatusProfile={this.props.updateStatusProfile}\r\n            savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = state =>  ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {getUserProfile, getStatusProfile, updateStatusProfile, savePhoto }),\r\n    withRouter,\r\n    withAuthRedirect\r\n) (ProfileContainer)\r\n"],"sourceRoot":""}
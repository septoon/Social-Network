{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","classes","dialog","activeClassName","active","name","Message","message","avatar","src","alt","text","maxLength50","maxLengthCreator","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","autoFocus","placeholder","validate","required","component","Input","Dialogs","messagesElements","dialogsPage","messagesData","map","arg","dialogsElements","dialogsData","dialogs","dialogs_item","messages","value","sendMessage","reset","newMessageBody","DialogsContainer","compose","dispatch","sendMessageCreator"],"mappings":"4OAIIA,EAA6B,SAAAC,GAAK,MAAM,CAAEC,OAAQD,EAAME,KAAKD,SAEpDE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAcE,KAAKC,QADK,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAqCL,K,oBCb9EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,wB,2FCalSC,EAVI,SAAAN,GACf,IAAIO,EAAI,mBAAeP,EAAMQ,IAE7B,OACI,qBAAKC,UAAWC,IAAQC,OAAxB,SACI,cAAC,IAAD,CAASV,GAAIM,EAAMK,gBAAiBF,IAAQG,OAA5C,SAAqDb,EAAMc,UCQxDC,EAdC,SAAAf,GACZ,OACI,sBAAKS,UAAWC,IAAQM,QAAxB,UACI,qBAAKP,UAAWC,IAAQO,OAAxB,SACI,qBAAKC,IAAI,uEAAuEC,IAAI,aAExF,qBAAKV,UAAWC,IAAQI,KAAxB,oBAGA,qBAAKL,UAAWC,IAAQU,KAAxB,SAA+BpB,EAAMgB,c,0CCJ3CK,EAAcC,YAAiB,IAY/BC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAVL,SAAAxB,GAChB,OACI,uBAAM0B,SAAU1B,EAAM2B,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,WAAS,EAACC,YAAY,iBAAiBC,SAAU,CAACC,IAAUX,GAAcP,KAAK,iBAAiBmB,UAAWC,MAElH,uDA4BGC,EArBC,SAAAnC,GACZ,IAAIoC,EAAmBpC,EAAMqC,YAAYC,aAAaC,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAAsBxB,QAASwB,EAAIxB,SAArBwB,EAAIhC,OAC/EiC,EAAkBzC,EAAMqC,YAAYK,YAAYH,KAAI,SAAA5B,GAAM,OAAI,cAAC,EAAD,CAA4BG,KAAMH,EAAOG,KAAMN,GAAIG,EAAOH,IAAzCG,EAAOH,OAM1F,OACI,sBAAKC,UAAWC,IAAQiC,QAAxB,UACI,qBAAKlC,UAAWC,IAAQkC,aAAxB,SACKH,IAEL,sBAAKhC,UAAWC,IAAQmC,SAAxB,UACKT,EACD,cAACb,EAAD,CAAkBG,SAXb,SAACoB,GACd9C,EAAM+C,YAAYC,YAAMF,EAAMG,2B,yBCXhCC,EAAmBC,YACrBhD,aAVkB,SAACV,GACnB,MAAO,CAAE4C,YAAa5C,EAAM4C,gBAGP,SAACe,GACtB,MAAO,CACHL,YAAa,SAACE,GAAD,OAAoBG,EAASC,YAAmBJ,SAKjErD,IAFqBuD,CAGtBhB,GAEYe","file":"static/js/5.85c4eaa0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = state =>  ({ isAuth: state.auth.isAuth })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component{...this.props} />\r\n        }\r\n    }\r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1HoGu\",\"dialogs_item\":\"Dialogs_dialogs_item__2E-6K\",\"active\":\"Dialogs_active__mBY7r\",\"dialog\":\"Dialogs_dialog__jNF3W\",\"messages\":\"Dialogs_messages__1JAHD\",\"message\":\"Dialogs_message__3cYkW\",\"avatar\":\"Dialogs_avatar__JQPbr\",\"name\":\"Dialogs_name__ETDH6\",\"text\":\"Dialogs_text__1Rg8i\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from '../Dialogs.module.css'\r\n\r\nconst DialogItem = props => {\r\n    let path = `/dialogs/${props.id}`\r\n\r\n    return(\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react';\r\nimport classes from '../Dialogs.module.css'\r\n\r\nconst Message = props => {\r\n    return(\r\n        <div className={classes.message}>\r\n            <div className={classes.avatar}>\r\n                <img src=\"https://cdn.jpegmini.com/user/images/slider_puffin_before_mobile.jpg\" alt=\"avatar\"/>\r\n            </div>\r\n            <div className={classes.name}>\r\n                Sergey\r\n            </div>\r\n            <div className={classes.text}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { reset, Field, reduxForm } from 'redux-form';\r\nimport Input from '../common/FormsControls/FormControls';\r\nimport { required, maxLengthCreator } from '../common/Validator/Validator';\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst DialogsForm = props => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} >\r\n            <Field autoFocus placeholder='New message...' validate={[required, maxLength50]} name='newMessageBody' component={Input} />\r\n\r\n            <button>New Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({ form: 'dialogs' }) (DialogsForm)\r\n\r\nconst Dialogs = props => {\r\n    let messagesElements = props.dialogsPage.messagesData.map(arg => <Message key={arg.id} message={arg.message} />)\r\n    let dialogsElements = props.dialogsPage.dialogsData.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} /> )\r\n\r\n    let addMessage = (value) => {\r\n        props.sendMessage(reset(value.newMessageBody))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogs_item}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages} >\r\n                {messagesElements}\r\n                <DialogsFormRedux onSubmit={addMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialog-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { dialogsPage: state.dialogsPage }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs)\r\n\r\nexport default DialogsContainer\r\n"],"sourceRoot":""}